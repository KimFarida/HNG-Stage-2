swagger: '2.0'
info:
  title: HNG STAGE 2 CRUD API DOCUMENTATION
  version: 1.0
  description: This is a simple CRUD API for HNG stage 2 task.
paths:
  /api:
    post:
      summary: Create Person Endpoint
      parameters:
        - in: body
          name: person
          description: The person object to be created.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Mark Essien"
                description: The name of the person.
              age:
                type: integer
                format: int32
                example: 30
                description: The age of the person.
              address:
                type: string
                example: "HNG, Nigeria"
                description: The address of the person.
      responses:
        201:
          description: New person created successfully.
        400:
          description: Invalid input data or missing parameters.
        500:
          description: Something went wrong while creating the person.
  /api/{identifier}:
    get:
      summary: Get Person Details Endpoint
      parameters:
        - name: identifier
          in: path
          type: string
          required: true
          description: The ID or name of the person to fetch.
      responses:
        200:
          description: Person details retrieved successfully.
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                description: The ID of the person.
              name:
                type: string
                description: The name of the person.
              age:
                type: integer
                format: int32
                description: The age of the person.
              address:
                type: string
                description: The address of the person.
        404:
          description: Person not found.

    put:
      summary: Update Person Endpoint
      parameters:
        - name: identifier
          in: path
          type: string
          required: true
          description: The ID or name of the person to update.
        - name: person
          in: body
          description: The updated person object.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Mark Anthony"
                description: The updated name of the person.
              age:
                type: integer
                format: int32
                example: 35
                description: The updated age of the person.
              address:
                type: string
                example: "1004 apartments, Lagos"
                description: The updated address of the person.
      responses:
        200:
          description: Person updated successfully.
        400:
          description: Invalid input data format.
        404:
          description: Person not found.
        500:
          description: Something went wrong while updating the person.

    delete:
      summary: Delete Person Endpoint
      parameters:
        - name: identifier
          in: path
          type: string
          required: true
          description: The ID or name of the person to delete.
      responses:
        200:
          description: Person deleted successfully.
        404:
          description: Person not found.
        500:
          description: Something went wrong while deleting the person.

  # /api/persons:
  #   get:
  #     summary: Get Persons Endpoint
  #     parameters:
  #       - name: page
  #         in: query
  #         type: integer
  #         description: The page number (starting from 1).
  #         default: 1
  #       - name: per_page
  #         in: query
  #         type: integer
  #         description: The number of persons per page.
  #         default: 5
  #     responses:
  #       200:
  #         description: A list of persons.
  #         schema:
  #           type: array
  #           items:
  #             $ref: '#/definitions/Person'

definitions:
  Person:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      age:
        type: integer
        format: int32
      address:
        type: string